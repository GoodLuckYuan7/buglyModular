apply plugin: 'com.android.application'
// 依赖插件脚本
apply from: 'tinker-support.gradle'

android {
    signingConfigs {
        release {
            storeFile file('D:\\ICEGPS\\buglyModular\\keystore\\buglyModularKey.jks')
            storePassword '123456'
            keyAlias = 'yuan7'
            keyPassword '123456'
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.icegps.buglymodular"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

//        // Warning:ignoreWarning is false, but we found loader classes are found in old secondary dex.
//        // 发生以上错误添加下面两行代码，同时将tinker_multidexkeep.pro文档放到app目录下
//        // tinker_multidexkeep.pro文档可以在build-intermediates-tinker_intermediates下找到。
//        // 当方法过多时用来分包。
//        multiDexEnabled true
//        multiDexKeepProguard file('tinker_multidexkeeps.pro')

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable true
            zipAlignEnabled true   //Zipalign优化
            shrinkResources false //删除无用资源
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies['appcompat']
    implementation rootProject.ext.dependencies['constraintlayout']
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation  rootProject.ext.dependencies['junit']
    androidTestImplementation rootProject.ext.dependencies['espresso-core']

    // 阿里Arouter管理
    implementation rootProject.ext.dependencies['arouter-api']
    annotationProcessor rootProject.ext.dependencies['arouter-compiler']

    // 腾讯bugly热更新、热修复
    implementation rootProject.ext.dependencies['multidex']
    implementation rootProject.ext.dependencies['crashreport_upgrade']
    implementation rootProject.ext.dependencies['tinker-android-lib']
    implementation rootProject.ext.dependencies['nativecrashreport']

    // com.android.support:support-v4
//    implementation rootProject.ext.dependencies['supportVersion']


    // 引入多模块
    if (isNeedModuleA.toBoolean()) {
        implementation  project(':lib1')
    }
    if (isNeedModuleB.toBoolean()) {
        implementation  project(':lib2')
    }
}
